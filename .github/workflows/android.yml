name: Android

# spell-checker:ignore TERMUX reactivecircus Swatinem  noaudio pkill swiftshader dtolnay juliangruber

on:
  pull_request:
  push:
    branches:
      - main


permissions:
  contents: read # to fetch code (actions/checkout)

# End the current execution if there is a new changeset in the PR.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  RUNNER_OS: ubuntu-latest
  TERMUX: v0.118.0
  KEY_POSTFIX: nextest+rustc-hash+adb+sshd+upgrade+XGB+inc18
  COMMON_EMULATOR_OPTIONS: -no-window -noaudio -no-boot-anim -camera-back none -gpu swiftshader_indirect
  EMULATOR_DISK_SIZE: 12GB
  EMULATOR_HEAP_SIZE: 2048M
  EMULATOR_BOOT_TIMEOUT: 1200 # 20min
  VM_CORES: 4
  VM32_RAM: 4096
  VM64_RAM: 8192

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create matrix
        id: create_matrix
        uses: fabiocaccamo/create-matrix-action@v3
        with:
          matrix: |
            api-level {28}         , arch {x86}   , target {google_apis_playstore}, cores {${{ env.VM_CORES }}}, ram {${{ env.VM32_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {28}         , arch {x86_64}, target {google_apis_playstore}, cores {${{ env.VM_CORES }}}, ram {${{ env.VM64_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {29}         , arch {x86}   , target {default}              , cores {${{ env.VM_CORES }}}, ram {${{ env.VM32_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {29}         , arch {x86_64}, target {default}              , cores {${{ env.VM_CORES }}}, ram {${{ env.VM64_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {30}         , arch {x86}   , target {google_apis}          , cores {${{ env.VM_CORES }}}, ram {${{ env.VM32_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {30}         , arch {x86_64}, target {google_apis}          , cores {${{ env.VM_CORES }}}, ram {${{ env.VM64_RAM }}}, os {${{ env.RUNNER_OS }}}
            api-level {31,32,33,34}, arch {x86_64}, target {default}              , cores {${{ env.VM_CORES }}}, ram {${{ env.VM64_RAM }}}, os {${{ env.RUNNER_OS }}}
    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}
  test_android:
    needs: prepare
    name: Test builds
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.prepare.outputs.matrix)}}
    runs-on: ubuntu-latest
    env:
      EMULATOR_RAM_SIZE: ${{ matrix.ram }}
      EMULATOR_CORES: ${{ matrix.cores }}
      RUNNER_OS: ${{ matrix.os }}
      AVD_CACHE_KEY: "set later due to limitations of github actions not able to concatenate env variables"
    steps:
    - name: Concatenate values to environment file
      run: |
        echo "os: ${{ matrix.os }}, cores: ${{ matrix.cores }}, ram: ${{ matrix.ram }},
        echo "api-level: ${{ matrix.api-level }}, target: ${{ matrix.target }}, arch: ${{ matrix.arch }}
        echo "matrix: ${{ toJSON(matrix) }}"
